!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.hyperactiv=t()}(this,function(){"use strict";const e=new Set;return{observe:function(t,{props:n=null}={}){return t.__observeMap=new Map,new Proxy(t,{get(o,s){const{__observeMap:r}=t;if(n&&!n.includes(s))return t[s];r.has(s)||r.set(s,new Set);for(let t of e){const e=r.get(s);e.add(t),r.set(s,e)}return t[s]},set(e,o,s){const{__observeMap:r}=t;if(t[o]=s,n&&!n.includes(o))return!0;if(r.has(o)){const e=r.get(o);for(let t of e)t.__disposed?e.delete(t):t()}return!0}})},computed:function(t,{autoRun:n=!0}={}){const o=new Proxy(t,{apply:function(t,n,s){e.add(o),s.push({capture:{stop:()=>e.delete(o),resume:()=>e.add(o)}});const r=t.apply(n,s);return r instanceof Promise?r.then(()=>{e.delete(o)}).catch(t=>{throw e.delete(o),t}):(e.delete(o),r)}});return n&&o(),o},dispose:e=>e.__disposed=!0}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHlwZXJhY3Rpdi5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXB1dGVkU2V0ID0gbmV3IFNldCgpXG5cbmNvbnN0IGNvbXB1dGVkID0gZnVuY3Rpb24oZnVuLCB7wqBhdXRvUnVuID0gdHJ1ZSB9ID0ge30pIHtcbiAgICBjb25zdCBwcm94eSA9IG5ldyBQcm94eShmdW4sIHtcbiAgICAgICAgYXBwbHk6IGZ1bmN0aW9uKHRhcmdldCwgdGhpc0FyZywgYXJnc0xpc3QpIHtcbiAgICAgICAgICAgIGNvbXB1dGVkU2V0LmFkZChwcm94eSlcblxuICAgICAgICAgICAgYXJnc0xpc3QucHVzaCh7XG4gICAgICAgICAgICAgICAgY2FwdHVyZSA6e1xuICAgICAgICAgICAgICAgICAgICBzdG9wOiAoKSA9PiBjb21wdXRlZFNldC5kZWxldGUocHJveHkpLFxuICAgICAgICAgICAgICAgICAgICByZXN1bWU6ICgpID0+IGNvbXB1dGVkU2V0LmFkZChwcm94eSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0YXJnZXQuYXBwbHkodGhpc0FyZywgYXJnc0xpc3QpXG5cbiAgICAgICAgICAgIGlmKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXB1dGVkU2V0LmRlbGV0ZShwcm94eSlcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFNldC5kZWxldGUocHJveHkpXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29tcHV0ZWRTZXQuZGVsZXRlKHByb3h5KVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pXG4gICAgaWYoYXV0b1J1bikgeyBwcm94eSgpIH1cbiAgICByZXR1cm4gcHJveHlcbn1cblxuY29uc3QgZGlzcG9zZSA9IF8gPT4gXy5fX2Rpc3Bvc2VkID0gdHJ1ZVxuXG5jb25zdCBvYnNlcnZlID0gZnVuY3Rpb24ob2JqLCB7IHByb3BzID0gbnVsbCB9ID0ge30pIHtcbiAgICBvYmouX19vYnNlcnZlTWFwID0gbmV3IE1hcCgpXG5cbiAgICByZXR1cm4gbmV3IFByb3h5KG9iaiwge1xuICAgICAgICBnZXQoXywgcHJvcCkge1xuICAgICAgICAgICAgY29uc3QgeyBfX29ic2VydmVNYXAgfSA9IG9ialxuXG4gICAgICAgICAgICBpZihwcm9wcyAmJiAhcHJvcHMuaW5jbHVkZXMocHJvcCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9ialtwcm9wXVxuXG4gICAgICAgICAgICBpZighX19vYnNlcnZlTWFwLmhhcyhwcm9wKSkge1xuICAgICAgICAgICAgICAgIF9fb2JzZXJ2ZU1hcC5zZXQocHJvcCwgbmV3IFNldCgpKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmb3IobGV0IGNvbXB1dGVkIG9mIGNvbXB1dGVkU2V0KSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2V0ID0gX19vYnNlcnZlTWFwLmdldChwcm9wKVxuICAgICAgICAgICAgICAgIHNldC5hZGQoY29tcHV0ZWQpXG4gICAgICAgICAgICAgICAgX19vYnNlcnZlTWFwLnNldChwcm9wLCBzZXQpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb2JqW3Byb3BdXG4gICAgICAgIH0sXG4gICAgICAgIHNldChfLCBwcm9wLCB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgeyBfX29ic2VydmVNYXAgfSA9IG9ialxuICAgICAgICAgICAgb2JqW3Byb3BdID0gdmFsdWVcblxuICAgICAgICAgICAgaWYocHJvcHMgJiYgIXByb3BzLmluY2x1ZGVzKHByb3ApKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlXG5cbiAgICAgICAgICAgIGlmKF9fb2JzZXJ2ZU1hcC5oYXMocHJvcCkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkZXBlbmRlbnRzID0gX19vYnNlcnZlTWFwLmdldChwcm9wKVxuICAgICAgICAgICAgICAgIGZvcihsZXQgZGVwZW5kZW50IG9mIGRlcGVuZGVudHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoZGVwZW5kZW50Ll9fZGlzcG9zZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlcGVuZGVudHMuZGVsZXRlKGRlcGVuZGVudClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlcGVuZGVudCgpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG4gICAgfSlcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIG9ic2VydmUsXG4gICAgY29tcHV0ZWQsXG4gICAgZGlzcG9zZVxufSJdLCJuYW1lcyI6WyJjb21wdXRlZFNldCIsIlNldCIsIm9ic2VydmUiLCJvYmoiLCJwcm9wcyIsIl9fb2JzZXJ2ZU1hcCIsIk1hcCIsIlByb3h5IiwiW29iamVjdCBPYmplY3RdIiwiXyIsInByb3AiLCJpbmNsdWRlcyIsImhhcyIsInNldCIsImNvbXB1dGVkIiwiZ2V0IiwiYWRkIiwidmFsdWUiLCJkZXBlbmRlbnRzIiwiZGVwZW5kZW50IiwiX19kaXNwb3NlZCIsImRlbGV0ZSIsImZ1biIsImF1dG9SdW4iLCJwcm94eSIsImFwcGx5IiwidGFyZ2V0IiwidGhpc0FyZyIsImFyZ3NMaXN0IiwicHVzaCIsImNhcHR1cmUiLCJzdG9wIiwicmVzdW1lIiwicmVzdWx0IiwiUHJvbWlzZSIsInRoZW4iLCJjYXRjaCIsImVyciIsImRpc3Bvc2UiXSwibWFwcGluZ3MiOiJzTEFBQSxNQUFNQSxFQUFjLElBQUlDLFdBaUZwQkMsUUE1Q1ksU0FBU0MsR0FBS0MsTUFBRUEsRUFBUSxVQUdwQyxPQUZBRCxFQUFJRSxhQUFlLElBQUlDLElBRWhCLElBQUlDLE1BQU1KLEdBQ2JLLElBQUlDLEVBQUdDLEdBQ0gsTUFBTUwsYUFBRUEsR0FBaUJGLEVBRXpCLEdBQUdDLElBQVVBLEVBQU1PLFNBQVNELEdBQ3hCLE9BQU9QLEVBQUlPLEdBRVhMLEVBQWFPLElBQUlGLElBQ2pCTCxFQUFhUSxJQUFJSCxFQUFNLElBQUlULEtBRy9CLElBQUksSUFBSWEsS0FBWWQsRUFBYSxDQUM3QixNQUFNYSxFQUFNUixFQUFhVSxJQUFJTCxHQUM3QkcsRUFBSUcsSUFBSUYsR0FDUlQsRUFBYVEsSUFBSUgsRUFBTUcsR0FFM0IsT0FBT1YsRUFBSU8sSUFFZkYsSUFBSUMsRUFBR0MsRUFBTU8sR0FDVCxNQUFNWixhQUFFQSxHQUFpQkYsRUFHekIsR0FGQUEsRUFBSU8sR0FBUU8sRUFFVGIsSUFBVUEsRUFBTU8sU0FBU0QsR0FDeEIsT0FBTyxFQUVYLEdBQUdMLEVBQWFPLElBQUlGLEdBQU8sQ0FDdkIsTUFBTVEsRUFBYWIsRUFBYVUsSUFBSUwsR0FDcEMsSUFBSSxJQUFJUyxLQUFhRCxFQUNkQyxFQUFVQyxXQUNURixFQUFXRyxPQUFPRixHQUVsQkEsSUFJWixPQUFPLE1BT2ZMLFNBaEZhLFNBQVNRLEdBQUtDLFFBQUVBLEdBQVUsT0FDdkMsTUFBTUMsRUFBUSxJQUFJakIsTUFBTWUsR0FDcEJHLE1BQU8sU0FBU0MsRUFBUUMsRUFBU0MsR0FDN0I1QixFQUFZZ0IsSUFBSVEsR0FFaEJJLEVBQVNDLE1BQ0xDLFNBQ0lDLEtBQU0sSUFBTS9CLEVBQVlxQixPQUFPRyxHQUMvQlEsT0FBUSxJQUFNaEMsRUFBWWdCLElBQUlRLE1BSXRDLE1BQU1TLEVBQVNQLEVBQU9ELE1BQU1FLEVBQVNDLEdBRXJDLE9BQUdLLGFBQWtCQyxRQUNWRCxFQUNGRSxLQUFLLEtBQ0ZuQyxFQUFZcUIsT0FBT0csS0FFdEJZLE1BQU1DLElBRUgsTUFEQXJDLEVBQVlxQixPQUFPRyxHQUNiYSxLQUdkckMsRUFBWXFCLE9BQU9HLEdBQ1pTLE1BS25CLE9BREdWLEdBQVdDLElBQ1BBLEdBbURQYyxRQWhEWTdCLEdBQUtBLEVBQUVXLFlBQWEifQ==
